version: "3.9"
services:
  web_server:
    image: vv8web
    build:
      context: ./web_server
      dockerfile: Dockerfile
    ports:
      - "8080:80/tcp"
<<<<<<< HEAD
  database:
    image: vv8db
    build:
      context: ./database
      dockerfile: Dockerfile
    environment:
      POSTGRES_PASSWORD: root
    volumes:
      - vv8db:/var/lib/postgresql/data
  database_sidecar:
    image: vv8db_sidecar
    build:
      context: ./database_sidecar
      dockerfile: Dockerfile
  task_queue_broker:
    image: redis:6.2
  vv8_worker:
    # Processes urls using vv8
    build:
      context: ./task_queue
      dockerfile: vv8_worker.dockerfile
    image: vv8web_vv8_worker
    environment:
      VV8_CELERY_BROKER: task_queue_broker
      VV8_CELERY_BROKER_PORT: 6379
      VV8_CELERY_ID: vv8_worker
volumes:
  vv8db: {}
=======
    image: vv8web
  task_queue_broker:
    image: redis:6.2
  task_queue_tester:
    # This image loops creating test tasks
    build:
      context: ./task_queue
      dockerfile: test_worker.dockerfile
    entrypoint: "python3 ./vv8web_task_queue/schedule.py"
    image: vv8web_task_queue_tester
    environment:
      VV8_CELERY_BROKER: task_queue_broker
      VV8_CELERY_BROKER_PORT: 6379
      VV8_CELERY_ID: test_task
  vv8_worker:
    # Processes urls using vv8
    build:
      context: ./task_queue
      dockerfile: vv8_worker.dockerfile
    image: vv8web_vv8_worker
    environment:
      VV8_CELERY_BROKER: task_queue_broker
      VV8_CELERY_BROKER_PORT: 6379
      VV8_CELERY_ID: vv8_worker
volumes: {}
>>>>>>> 127fc1e (create proof of concept task queue)
